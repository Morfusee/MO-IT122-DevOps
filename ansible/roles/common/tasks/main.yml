- name: Install aptitude
  apt:
    name: aptitude
    state: latest
    update_cache: true

- name: Update apt and install required system packages
  become: true
  apt:
    pkg:
      - vim
      - git
      - ufw
      - fail2ban
    state: latest
    update_cache: true

- name: Install required packages (ca-certificates, curl)
  apt:
    name:
      - ca-certificates
      - curl
    state: present
    update_cache: yes

- name: Create directory for keyring
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Set permissions for Docker GPG key
  file:
    path: /etc/apt/keyrings/docker.asc
    mode: '0444'

- name: Add Docker repository to APT sources
  shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/docker.list

- name: Update APT package index
  apt:
    update_cache: yes

- name: Install Docker packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest

- name: Create a new regular user with sudo privileges
  user:
    name: "{{ created_username }}"
    state: present
    groups: sudo
    append: true
    create_home: true

- name: Set authorized key for remote user
  ansible.posix.authorized_key:
    user: "{{ created_username }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"